server {
    listen 80;
    server_name videocall.chandancr.xyz;

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name videocall.chandancr.xyz;

    # SSL certificates (will be configured by certbot)
    ssl_certificate /etc/letsencrypt/live/videocall.chandancr.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/videocall.chandancr.xyz/privkey.pem;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Serve static files (React build)
    location / {
        root /var/www/videocall/client/dist;
        try_files $uri $uri/ /index.html;
        
        # Add headers for better security
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
    }

    # Proxy API requests to Node.js server
    location /socket.io/ {
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Handle static assets with caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        root /var/www/videocall/client/dist;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}
